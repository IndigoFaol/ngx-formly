webpackJsonp([31],{"/yOU":function(n,a){n.exports='<html><head></head><body><h1 id="custom-templates">Custom Templates</h1>\n<h2 id="prebuilt-templates">Prebuilt Templates</h2>\n<p>While it is recommended to create your own templates for ultimate customization and flexibility,\nthere are prebuilt templates you can use:</p>\n<ul>\n<li>Material</li>\n<li>Bootstrap</li>\n<li>Ionic (WIP)</li>\n</ul>\n<h2 id="creating-a-custom-template">Creating a Custom Template</h2>\n<p>Creating a custom template is quite easy, but also very flexible, the following example shows how we can create a simple input type:</p>\n<p>The live example can be found in stackblitz: <a href="https://stackblitz.com/edit/ngx-formly-custom-template">https://stackblitz.com/edit/ngx-formly-custom-template</a></p>\n<ol>\n<li><p>Defining the Field Type class and it&apos;s template:</p>\n<p>First you have to create a component representing the field which extends <code class="language-js">FieldType</code> class.</p>\n<pre><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> FieldType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&apos;@ngx-formly/core&apos;</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n selector<span class="token punctuation">:</span> <span class="token string">&apos;formly-field-input&apos;</span><span class="token punctuation">,</span>\n template<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`\n   &lt;input type=&quot;input&quot; [formControl]=&quot;formControl&quot; [formlyAttributes]=&quot;field&quot;&gt;\n `</span></span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">FormlyFieldInput</span> <span class="token keyword">extends</span> <span class="token class-name">FieldType</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre>\n<p>We passed a <code class="language-js">formControl</code> instance which is created by Formly, to let Formly know that this is the input that you want to associate with your model.</p>\n</li>\n<li><p>Register the custom type in <code class="language-js">NgModule</code> declaration:</p>\n<pre><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">{</span> FormlyFieldInput <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&apos;./formly-field-input&apos;</span><span class="token punctuation">;</span>\n\n@<span class="token function">NgModule</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n declarations<span class="token punctuation">:</span> <span class="token punctuation">[</span>FormlyFieldInput<span class="token punctuation">]</span><span class="token punctuation">,</span>\n imports<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n   <span class="token operator">...</span><span class="token punctuation">.</span>\n   FormlyModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n     types<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n       <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">&apos;input&apos;</span><span class="token punctuation">,</span> component<span class="token punctuation">:</span> FormlyFieldInput <span class="token punctuation">}</span><span class="token punctuation">,</span>\n     <span class="token punctuation">]</span><span class="token punctuation">,</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre>\n<p><code class="language-js">types</code> allows you to specify a custom type which you can use in your field configuration.</p>\n<p>A typical Type require two properties:</p>\n<ol>\n<li><code class="language-js">name</code>: The name of the template type. You use this in the <code class="language-js">type</code> option of a field.</li>\n<li><code class="language-js">component</code>: the component that Formly should create when this type is set.</li>\n</ol>\n</li>\n<li><p>Use the created custom type in the form config:</p>\n<pre><code class="language-typescript"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n fields<span class="token punctuation">:</span> FormlyFieldConfig<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n   <span class="token punctuation">{</span>\n     key<span class="token punctuation">:</span> <span class="token string">&apos;firstname&apos;</span><span class="token punctuation">,</span>\n     <span class="token keyword">type</span><span class="token punctuation">:</span> <span class="token string">&apos;input&apos;</span><span class="token punctuation">,</span>\n   <span class="token punctuation">}</span><span class="token punctuation">,</span>\n <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n <span class="token operator">...</span>\n<span class="token punctuation">}</span>\n</code></pre>\n</li>\n</ol>\n</body></html>'},"Z/7V":function(n,a,s){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var t=s("6Xbx"),o=s("/oeL"),e=s("BkNc"),p=s("Xa16"),l=function(){function n(n){this.route=n,this.navs=[{href:"/guide/getting-started",text:"Getting started"},{href:"/guide/custom-formly-field",text:"Custom Templates"}],this.contents={"getting-started":s("iHFH"),"custom-formly-field":s("/yOU")}}return n=t.b([Object(o.o)({selector:"formly-demo-examples",template:'\n    <mat-sidenav-container style="min-height: 90% !important;">\n      <mat-sidenav mode="side" opened="true" [style.width.px]="250">\n        <mat-nav-list>\n          <a mat-list-item  *ngFor="let link of navs" [routerLink]="link.href">\n            {{ link.text }}\n          </a>\n        </mat-nav-list>\n      </mat-sidenav>\n      <mat-sidenav-content>\n        <div *ngIf="route.params | async as params" [innerHtml]="contents[params.id]"></div>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  '}),t.d("design:paramtypes",["function"==typeof(a=void 0!==e.a&&e.a)&&a||Object])],n);var a}();s.d(a,"GuidesModule",function(){return c});var c=function(){function n(){}return n=t.b([Object(o.M)({imports:[p.b,e.g.forChild([{path:"",pathMatch:"full",redirectTo:"getting-started"},{path:":id",component:l}])],declarations:[l]})],n)}()},iHFH:function(n,a){n.exports='<html><head></head><body><p><img src="https://raw.githubusercontent.com/formly-js/angular-formly/master/other/logo/angular-formly-logo-64px.png" alt="angular-formly logo" title="angular-formly" align="right" width="64" height="64"></p>\n<h1 id="-ngx-formly">@ngx-formly</h1>\n<p><a href="https://angular.io/styleguide"><img src="https://mgechev.github.io/angular2-style-guide/images/badge.svg" alt="Angular Style Guide"></a>\n<a href="#contributors"><img src="https://img.shields.io/badge/all_contributors-13-orange.svg?style=flat-square" alt="All Contributors"></a>\n<a href="https://waffle.io/formly-js/ngx-formly"><img src="https://badge.waffle.io/formly-js/ngx-formly.png?label=ready&amp;title=Ready" alt="Stories in Ready"></a></p>\n<p>Status:\n<a href="https://travis-ci.org/formly-js/ngx-formly"><img src="https://travis-ci.org/formly-js/ngx-formly.svg?branch=master" alt="Build Status"></a>\n<a href="https://badge.fury.io/js/%40ngx-formly%2Fcore"><img src="https://badge.fury.io/js/%40ngx-formly%2Fcore.svg" alt="npm version"></a>\n<a href="https://david-dm.org/formly-js/ng-formly?type=dev"><img src="https://david-dm.org/formly-js/ng-formly/dev-status.svg" alt="devDependencies Status"></a>\n<a href="http://packagequality.com/#?package=ng-formly"><img src="http://npm.packagequality.com/shield/ng-formly.png" alt="Package Quality"></a>\n<a href="https://snyk.io/test/github/formly-js/ng-formly"><img src="https://snyk.io/test/github/formly-js/ng-formly/badge.svg" alt="Known Vulnerabilities"></a>\n<a href="http://codecov.io/github/formly-js/ng-formly?branch=master"><img src="http://codecov.io/github/formly-js/ng-formly/coverage.svg?branch=master" alt="codecov.io"></a></p>\n<p>Links:\n<a href="https://gitter.im/formly-js/angular2-formly?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge"><img src="https://badges.gitter.im/formly-js/angular2-formly.svg" alt="Gitter"></a>\n<a href="http://makeapullrequest.com"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square" alt="PRs Welcome"></a></p>\n<p>@ngx-formly is an Angular module which has a Components to help customize and render JavaScript/JSON configured forms.\nThe <code class="language-js">formly<span class="token operator">-</span>form</code> Component and the <code class="language-js">FormlyConfig</code> service are very powerful and bring unmatched maintainability to your\napplication&apos;s forms.</p>\n<h2 id="quick-start">Quick Start</h2>\n<p>Follow these steps to get started with ng-formly. Also check out our <a href="https://formly-js.github.io/ngx-formly">demos</a> for further examples.</p>\n<h4 id="1-install-angular-forms-and-ngx-formly-core-packages-">1. Install @angular/forms and @ngx-formly/core packages:</h4>\n<pre><code class="language-bash">  <span class="token function">npm</span> <span class="token function">install</span> @angular/forms @ngx-formly/core --save\n</code></pre>\n<h4 id="2-choose-and-install-your-ui-pre-defined-types-templates-package-">2. Choose and install your UI (pre-defined types/templates) package:</h4>\n<ul>\n<li><p><a href="https://github.com/angular/material2">Material2</a>:</p>\n<ol>\n<li>Ensure you have already installed material2 <a href="https://material.angular.io/guide/getting-started">https://material.angular.io/guide/getting-started</a></li>\n<li>Install <code class="language-js">@ngx<span class="token operator">-</span>formly<span class="token operator">/</span>material</code><pre><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> @ngx-formly/material --save\n</code></pre>\n</li>\n</ol>\n</li>\n<li><p><a href="https://getbootstrap.com">Bootstrap</a>:</p>\n<pre><code class="language-bash">  <span class="token function">npm</span> <span class="token function">install</span> @ngx-formly/bootstrap --save\n</code></pre>\n</li>\n</ul>\n<h4 id="3-import-the-formlymodule-and-ui-pre-defined-types-templates-">3. Import the <code class="language-js">FormlyModule</code> and UI (pre-defined types/templates):</h4>\n<pre><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">{</span>NgModule<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>ReactiveFormsModule<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>FormlyModule<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&apos;@ngx-formly/core&apos;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>FormlyBootstrapModule<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&apos;@ngx-formly/bootstrap&apos;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// for material2 import `FormlyMaterialModule`:</span>\n<span class="token comment">// import {FormlyMaterialModule} from &apos;@ngx-formly/material&apos;;</span>\n\n@<span class="token function">NgModule</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  imports<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token operator">...</span><span class="token punctuation">,</span>\n    ReactiveFormsModule<span class="token punctuation">,</span>\n    FormlyModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    FormlyBootstrapModule<span class="token punctuation">,</span>\n\n    <span class="token comment">// for material2 use:</span>\n    <span class="token comment">// FormlyMaterialModule</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre>\n<h4 id="3-define-the-form-config-in-your-component-">3. Define the form config in your component:</h4>\n<pre><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>FormGroup<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>FormlyFieldConfig<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&apos;@ngx-formly/core&apos;</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  selector<span class="token punctuation">:</span> <span class="token string">&apos;app&apos;</span><span class="token punctuation">,</span>\n  template<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`\n    &lt;form [formGroup]=&quot;form&quot; (ngSubmit)=&quot;submit(userModel)&quot;&gt;\n      &lt;formly-form [model]=&quot;userModel&quot; [fields]=&quot;userFields&quot;&gt;\n        &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;\n      &lt;/formly-form&gt;\n    &lt;/form&gt;\n  `</span></span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n  form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormGroup</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  userModel <span class="token operator">=</span> <span class="token punctuation">{</span> email<span class="token punctuation">:</span> <span class="token string">&apos;email@gmail.com&apos;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  userFields<span class="token punctuation">:</span> <span class="token keyword">Array</span><span class="token operator">&lt;</span>FormlyFieldConfig<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">&apos;email&apos;</span><span class="token punctuation">,</span>\n    <span class="token keyword">type</span><span class="token punctuation">:</span> <span class="token string">&apos;input&apos;</span><span class="token punctuation">,</span>\n    templateOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">type</span><span class="token punctuation">:</span> <span class="token string">&apos;email&apos;</span><span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">&apos;Email address&apos;</span><span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token string">&apos;Enter email&apos;</span><span class="token punctuation">,</span>\n      required<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token function">submit</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>From there, it&apos;s just JavaScript. Allowing for DRY, maintainable, reusable forms.</p>\n<h2 id="roadmap">Roadmap</h2>\n<p>See the <a href="https://github.com/formly-js/angular2-formly/labels/enhancement">issues labeled enhancement</a></p>\n<h2 id="thanks">Thanks</h2>\n<p>A special thanks to <a href="https://twitter.com/kentcdodds">Kent C. Dodds</a> for giving me opportunity to work on this.\nThis library is maintained (with love) by me, <a href="https://twitter.com/mohamedzamakhan">Mohammed Zama Khan</a>.\nThanks to all <a href="https://github.com/formly-js/angular2-formly/graphs/contributors">contributors</a>!\nIf you&apos;re trying to find angular-formly, go <a href="https://github.com/formly-js/angular-formly">here</a></p>\n<h2 id="contributors">Contributors</h2>\n<p>Thanks goes to these wonderful people (<a href="https://github.com/kentcdodds/all-contributors#emoji-key">emoji key</a>):</p>\n\x3c!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --\x3e\n<table>\n<thead>\n<tr>\n<th style="text-align:center"><a href="https://www.linkedin.com/in/mohammedzamakhan"><img src="https://avatars.githubusercontent.com/u/2327532?v=3" width="100px;"><br><sub>Zama Khan Mohammed</sub></a><br><a href="https://github.com/formly-js/ng-formly/commits?author=mohammedzamakhan">&#x1F4D6;</a> <a href="https://github.com/formly-js/ng-formly/commits?author=mohammedzamakhan">&#x1F4BB;</a> &#x1F440; &#x1F481; &#x1F687; &#x1F527;</th>\n<th style="text-align:center"><a href="https://github.com/aitboudad"><img src="https://avatars.githubusercontent.com/u/1753742?v=3" width="100px;"><br><sub>Abdellatif Ait boudad</sub></a><br><a href="https://github.com/formly-js/ng-formly/commits?author=aitboudad">&#x1F4BB;</a> <a href="https://github.com/formly-js/ng-formly/commits?author=aitboudad">&#x1F4D6;</a> <a href="https://github.com/formly-js/ng-formly/commits?author=aitboudad">&#x26A0;&#xFE0F;</a> &#x1F440; &#x1F481;</th>\n<th style="text-align:center"><a href="https://github.com/divyakumarjain"><img src="https://avatars.githubusercontent.com/u/2039134?v=3" width="100px;"><br><sub>divyakumarjain</sub></a><br><a href="https://github.com/formly-js/ng-formly/commits?author=divyakumarjain">&#x1F4BB;</a> <a href="https://github.com/formly-js/ng-formly/commits?author=divyakumarjain">&#x1F4D6;</a> &#x1F50C; &#x1F440; &#x1F481;</th>\n<th style="text-align:center"><a href="https://github.com/Pouja"><img src="https://avatars.githubusercontent.com/u/2385144?v=3" width="100px;"><br><sub>Pouja</sub></a><br><a href="https://github.com/formly-js/ng-formly/commits?author=Pouja">&#x1F4BB;</a> &#x1F440;</th>\n<th style="text-align:center"><a href="http://twitter.com/ckniffty"><img src="https://avatars.githubusercontent.com/u/464895?v=3" width="100px;"><br><sub>Caleb Kniffen</sub></a><br><a href="https://github.com/formly-js/ng-formly/issues?q=author%3Ackniffen">&#x1F41B;</a></th>\n<th style="text-align:center"><a href="https://github.com/Riron"><img src="https://avatars.githubusercontent.com/u/5145523?v=3" width="100px;"><br><sub>Riron</sub></a><br><a href="https://github.com/formly-js/ng-formly/issues?q=author%3ARiron">&#x1F41B;</a></th>\n<th style="text-align:center"><a href="https://github.com/thiagogjt"><img src="https://avatars.githubusercontent.com/u/645187?v=3" width="100px;"><br><sub>Thiago Lacerda</sub></a><br><a href="https://github.com/formly-js/ng-formly/issues?q=author%3Athiagogjt">&#x1F41B;</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:center"><a href="https://github.com/danielcrisp"><img src="https://avatars.githubusercontent.com/u/1104814?v=3" width="100px;"><br><sub>danielcrisp</sub></a><br><a href="https://github.com/formly-js/ng-formly/issues?q=author%3Adanielcrisp">&#x1F41B;</a> <a href="https://github.com/formly-js/ng-formly/commits?author=danielcrisp">&#x1F4BB;</a></td>\n<td style="text-align:center"><a href="https://github.com/franzeal"><img src="https://avatars.githubusercontent.com/u/7455769?v=3" width="100px;"><br><sub>Tony Franzese</sub></a><br><a href="https://github.com/formly-js/ng-formly/issues?q=author%3Afranzeal">&#x1F41B;</a> <a href="https://github.com/formly-js/ng-formly/commits?author=franzeal">&#x1F4BB;</a></td>\n<td style="text-align:center"><a href="http://JackieRGleason.com"><img src="https://avatars.githubusercontent.com/u/1319151?v=3" width="100px;"><br><sub>Jackie Gleason</sub></a><br><a href="https://github.com/formly-js/ng-formly/issues?q=author%3Ajrgleason">&#x1F41B;</a> <a href="https://github.com/formly-js/ng-formly/commits?author=jrgleason">&#x1F4BB;</a></td>\n<td style="text-align:center"><a href="https://github.com/ampsarfraz"><img src="https://avatars.githubusercontent.com/u/23452573?v=3" width="100px;"><br><sub>ampsarfraz</sub></a><br><a href="https://github.com/formly-js/ng-formly/issues?q=author%3Aampsarfraz">&#x1F41B;</a></td>\n<td style="text-align:center"><a href="https://github.com/Krustie101"><img src="https://avatars.githubusercontent.com/u/1636728?v=3" width="100px;"><br><sub>Krustie101</sub></a><br><a href="https://github.com/formly-js/ng-formly/issues?q=author%3AKrustie101">&#x1F41B;</a> <a href="https://github.com/formly-js/ng-formly/commits?author=Krustie101">&#x1F4BB;</a></td>\n<td style="text-align:center"><a href="https://github.com/ultimafirez"><img src="https://avatars.githubusercontent.com/u/21162369?v=3" width="100px;"><br><sub>ultimafirez</sub></a><br><a href="https://github.com/formly-js/ng-formly/issues?q=author%3Aultimafirez">&#x1F41B;</a></td>\n</tr>\n</tbody>\n</table>\n\x3c!-- ALL-CONTRIBUTORS-LIST:END --\x3e\n<p>This project follows the <a href="https://github.com/kentcdodds/all-contributors">all-contributors</a> specification. Contributions of any kind welcome!</p>\n</body></html>'}});