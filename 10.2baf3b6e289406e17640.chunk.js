webpackJsonp([10],{"2Zge":function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Component <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormGroup <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyFormOptions<span class="token punctuation" >,</span> FormlyFieldConfig <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >Component</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  selector<span class="token punctuation" >:</span> <span class="token string" >\'formly-app-example\'</span><span class="token punctuation" >,</span>\n  templateUrl<span class="token punctuation" >:</span> <span class="token string" >\'./app.component.html\'</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppComponent</span> <span class="token punctuation" >{</span>\n  form <span class="token operator" >=</span> <span class="token keyword" >new</span> <span class="token class-name" >FormGroup</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  model <span class="token operator" >=</span> <span class="token punctuation" >{</span>\n    investments<span class="token punctuation" >:</span> <span class="token punctuation" >[</span><span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  options<span class="token punctuation" >:</span> FormlyFormOptions <span class="token operator" >=</span> <span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n\n  fields<span class="token punctuation" >:</span> FormlyFieldConfig<span class="token punctuation" >[</span><span class="token punctuation" >]</span> <span class="token operator" >=</span> <span class="token punctuation" >[</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'investments\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'repeat\'</span><span class="token punctuation" >,</span>\n      fieldArray<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        fieldGroupClassName<span class="token punctuation" >:</span> <span class="token string" >\'row\'</span><span class="token punctuation" >,</span>\n        templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n          btnText<span class="token punctuation" >:</span> <span class="token string" >\'Add another investment\'</span><span class="token punctuation" >,</span>\n        <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n        fieldGroup<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n          <span class="token punctuation" >{</span>\n            className<span class="token punctuation" >:</span> <span class="token string" >\'col-sm-4\'</span><span class="token punctuation" >,</span>\n            type<span class="token punctuation" >:</span> <span class="token string" >\'input\'</span><span class="token punctuation" >,</span>\n            key<span class="token punctuation" >:</span> <span class="token string" >\'investmentName\'</span><span class="token punctuation" >,</span>\n            templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n              label<span class="token punctuation" >:</span> <span class="token string" >\'Name of Investment:\'</span><span class="token punctuation" >,</span>\n              required<span class="token punctuation" >:</span> <span class="token keyword" >true</span><span class="token punctuation" >,</span>\n            <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n          <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n          <span class="token punctuation" >{</span>\n            type<span class="token punctuation" >:</span> <span class="token string" >\'input\'</span><span class="token punctuation" >,</span>\n            key<span class="token punctuation" >:</span> <span class="token string" >\'investmentDate\'</span><span class="token punctuation" >,</span>\n            className<span class="token punctuation" >:</span> <span class="token string" >\'col-sm-3\'</span><span class="token punctuation" >,</span>\n            templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n              type<span class="token punctuation" >:</span> <span class="token string" >\'date\'</span><span class="token punctuation" >,</span>\n              label<span class="token punctuation" >:</span> <span class="token string" >\'Date of Investment:\'</span><span class="token punctuation" >,</span>\n            <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n          <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n          <span class="token punctuation" >{</span>\n            type<span class="token punctuation" >:</span> <span class="token string" >\'input\'</span><span class="token punctuation" >,</span>\n            key<span class="token punctuation" >:</span> <span class="token string" >\'stockIdentifier\'</span><span class="token punctuation" >,</span>\n            className<span class="token punctuation" >:</span> <span class="token string" >\'col-sm-3\'</span><span class="token punctuation" >,</span>\n            templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n              label<span class="token punctuation" >:</span> <span class="token string" >\'Stock Identifier:\'</span><span class="token punctuation" >,</span>\n              addonRight<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n                <span class="token keyword" >class</span><span class="token punctuation" >:</span> <span class="token string" >\'fa fa-code\'</span><span class="token punctuation" >,</span>\n                onClick<span class="token punctuation" >:</span> <span class="token punctuation" >(</span>to<span class="token punctuation" >,</span> fieldType<span class="token punctuation" >,</span> $event<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> console<span class="token punctuation" >.</span><span class="token function" >log</span><span class="token punctuation" >(</span>to<span class="token punctuation" >,</span> fieldType<span class="token punctuation" >,</span> $event<span class="token punctuation" >)</span><span class="token punctuation" >,</span>\n              <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n            <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n          <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n        <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n\n  <span class="token function" >submit</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token function" >alert</span><span class="token punctuation" >(</span>JSON<span class="token punctuation" >.</span><span class="token function" >stringify</span><span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>model<span class="token punctuation" >)</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n<span class="token punctuation" >}</span>\n'},"8Quw":function(n,s){n.exports='<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>form</span> <span class="token attr-name" >[formGroup]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span> <span class="token attr-name" >(ngSubmit)</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit()<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>formly-form</span> <span class="token attr-name" >[model]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>model<span class="token punctuation" >"</span></span> <span class="token attr-name" >[fields]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>fields<span class="token punctuation" >"</span></span> <span class="token attr-name" >[options]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>options<span class="token punctuation" >"</span></span> <span class="token attr-name" >[form]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n    <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>button</span> <span class="token attr-name" >type</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit<span class="token punctuation" >"</span></span> <span class="token attr-name" >class</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>btn btn-primary submit-button<span class="token punctuation" >"</span></span> <span class="token attr-name" >[disabled]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>!form.valid<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>Submit<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>button</span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>formly-form</span><span class="token punctuation" >></span></span>\n<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>form</span><span class="token punctuation" >></span></span>\n'},GUYg:function(n,s,a){"use strict";Object.defineProperty(s,"__esModule",{value:!0});var t=a("6Xbx"),p=a("/oeL"),o=a("BkNc"),e=a("Xa16"),c=a("qbdv"),u=a("bm2B"),l=a("JPbF"),i=a("sAA7"),k=function(){function n(){this.form=new u.d({}),this.model={investments:[{}]},this.options={},this.fields=[{key:"investments",type:"repeat",fieldArray:{fieldGroupClassName:"row",templateOptions:{btnText:"Add another investment"},fieldGroup:[{className:"col-sm-4",type:"input",key:"investmentName",templateOptions:{label:"Name of Investment:",required:!0}},{type:"input",key:"investmentDate",className:"col-sm-3",templateOptions:{type:"date",label:"Date of Investment:"}},{type:"input",key:"stockIdentifier",className:"col-sm-3",templateOptions:{label:"Stock Identifier:",addonRight:{class:"fa fa-code",onClick:function(n,s,a){return console.log(n,s,a)}}}}]}}]}return n.prototype.submit=function(){alert(JSON.stringify(this.model))},n=t.b([Object(p.o)({selector:"formly-app-example",template:a("IPuB")})],n)}(),r=function(n){function s(s){return n.call(this,s)||this}return t.c(s,n),s=t.b([Object(p.o)({selector:"formly-repeat-section",template:'\n    <div *ngFor="let field of field.fieldGroup; let i = index;">\n      <formly-group\n        [model]="model[i]"\n        [field]="field"\n        [options]="options"\n        [form]="formControl">\n        <div class="col-sm-2 d-flex align-items-center">\n          <button class="btn btn-danger" type="button" (click)="remove(i)">Remove</button>\n        </div>\n      </formly-group>\n    </div>\n    <div style="margin:30px 0;">\n      <button class="btn btn-primary" type="button" (click)="add()">Add More Investments</button>\n    </div>\n  '}),t.d("design:paramtypes",["function"==typeof(a=void 0!==l.d&&l.d)&&a||Object])],s);var a}(l.a),m=function(){function n(){}return n=t.b([Object(p.M)({imports:[c.b,u.h,i.a,l.e.forRoot({types:[{name:"repeat",component:r}]})],declarations:[k,r]})],n)}();a.d(s,"ConfigModule",function(){return d});var d=function(){function n(){}return n=t.b([Object(p.M)({imports:[e.b,m,o.g.forChild([{path:"",component:e.a,data:{examples:[{title:"Repeating Section",description:"\n              This demonstrates using\n              <code>formly-form</code> inside of a custom type in order to accomplish repeating fields.\n            ",component:k,files:[{file:"app.component.html",content:a("8Quw")},{file:"app.component.ts",content:a("2Zge")},{file:"app.module.ts",content:a("lVsc")},{file:"repeat-section.type.ts",content:a("qkbu")}]}]}}])]})],n)}()},IPuB:function(n,s){n.exports='<form [formGroup]="form" (ngSubmit)="submit()">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form">\n    <button type="submit" class="btn btn-primary submit-button" [disabled]="!form.valid">Submit</button>\n  </formly-form>\n</form>\n'},lVsc:function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> NgModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> CommonModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/common\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> ReactiveFormsModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyBootstrapModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/bootstrap\'</span><span class="token punctuation" >;</span>\n\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> AppComponent <span class="token punctuation" >}</span> from <span class="token string" >\'./app.component\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> RepeatTypeComponent <span class="token punctuation" >}</span> from <span class="token string" >\'./repeat-section.type\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >NgModule</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  imports<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    CommonModule<span class="token punctuation" >,</span>\n    ReactiveFormsModule<span class="token punctuation" >,</span>\n    FormlyBootstrapModule<span class="token punctuation" >,</span>\n    FormlyModule<span class="token punctuation" >.</span><span class="token function" >forRoot</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n      types<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n        <span class="token punctuation" >{</span> name<span class="token punctuation" >:</span> <span class="token string" >\'repeat\'</span><span class="token punctuation" >,</span> component<span class="token punctuation" >:</span> RepeatTypeComponent <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n  declarations<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    AppComponent<span class="token punctuation" >,</span>\n    RepeatTypeComponent<span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppModule</span> <span class="token punctuation" >{</span> <span class="token punctuation" >}</span>\n'},qkbu:function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Component<span class="token punctuation" >,</span> OnInit <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FieldArrayType<span class="token punctuation" >,</span> FormlyFormBuilder <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >Component</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  selector<span class="token punctuation" >:</span> <span class="token string" >\'formly-repeat-section\'</span><span class="token punctuation" >,</span>\n  template<span class="token punctuation" >:</span> `\n    <span class="token operator" >&lt;</span>div <span class="token operator" >*</span>ngFor<span class="token operator" >=</span><span class="token string" >"let field of field.fieldGroup; let i = index;"</span><span class="token operator" >></span>\n      <span class="token operator" >&lt;</span>formly<span class="token operator" >-</span>group\n        <span class="token punctuation" >[</span>model<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"model[i]"</span>\n        <span class="token punctuation" >[</span>field<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"field"</span>\n        <span class="token punctuation" >[</span>options<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"options"</span>\n        <span class="token punctuation" >[</span>form<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"formControl"</span><span class="token operator" >></span>\n        <span class="token operator" >&lt;</span>div <span class="token keyword" >class</span><span class="token operator" >=</span><span class="token string" >"col-sm-2 d-flex align-items-center"</span><span class="token operator" >></span>\n          <span class="token operator" >&lt;</span>button <span class="token keyword" >class</span><span class="token operator" >=</span><span class="token string" >"btn btn-danger"</span> type<span class="token operator" >=</span><span class="token string" >"button"</span> <span class="token punctuation" >(</span>click<span class="token punctuation" >)</span><span class="token operator" >=</span><span class="token string" >"remove(i)"</span><span class="token operator" >></span>Remove<span class="token operator" >&lt;</span><span class="token operator" >/</span>button<span class="token operator" >></span>\n        <span class="token operator" >&lt;</span><span class="token operator" >/</span>div<span class="token operator" >></span>\n      <span class="token operator" >&lt;</span><span class="token operator" >/</span>formly<span class="token operator" >-</span>group<span class="token operator" >></span>\n    <span class="token operator" >&lt;</span><span class="token operator" >/</span>div<span class="token operator" >></span>\n    <span class="token operator" >&lt;</span>div style<span class="token operator" >=</span><span class="token string" >"margin:30px 0;"</span><span class="token operator" >></span>\n      <span class="token operator" >&lt;</span>button <span class="token keyword" >class</span><span class="token operator" >=</span><span class="token string" >"btn btn-primary"</span> type<span class="token operator" >=</span><span class="token string" >"button"</span> <span class="token punctuation" >(</span>click<span class="token punctuation" >)</span><span class="token operator" >=</span><span class="token string" >"add()"</span><span class="token operator" >></span>Add More Investments<span class="token operator" >&lt;</span><span class="token operator" >/</span>button<span class="token operator" >></span>\n    <span class="token operator" >&lt;</span><span class="token operator" >/</span>div<span class="token operator" >></span>\n  `<span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >RepeatTypeComponent</span> <span class="token keyword" >extends</span> <span class="token class-name" >FieldArrayType</span> <span class="token punctuation" >{</span>\n  <span class="token keyword" >constructor</span><span class="token punctuation" >(</span>builder<span class="token punctuation" >:</span> FormlyFormBuilder<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >super</span><span class="token punctuation" >(</span>builder<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n<span class="token punctuation" >}</span>\n'}});